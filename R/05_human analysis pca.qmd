---
title: "Untitled"
format: html
editor: visual
---

{r} library(tidyverse) library(dplyr)

{r} human_joined_tran\<- human_joined \|\> select(gene_id, Cell_line,Treatment,Compound_dose, Expression_levels) human_joined_tran

{r} min_pos_value \<- human_joined_tran \|\> select(Expression_levels) \|\> filter(Expression_levels != 0) \|\> summarize(min = min(Expression_levels)) \|\> pull()

human_tran \<- human_joined_tran \|\> mutate(Expression_levels = (Expression_levels + 0.99 \* min_pos_value))

human_trans

{r} human_joined_wide_treat\<- human_trans \|\> group_by(Treatment) \|\> pivot_wider( names_from = Treatment, values_from = log2_expression_level ) human_joined_wide

{r} human_log2fc \<- human_joined_wide \|\> mutate(log2fc = G007.LK - DMSO)

human_log2fc

{r}

human_log2fc\<- human_log2fc \|\> select(gene_id,Cell_line, log2fc )

#this is the wide format of the log2fc dataset for the human dataset

{r} human_log2fc_wide\<- human_log2fc \|\> pivot_wider( names_from = gene_id, values_from = log2fc ) human_log2fc_wide

PCA

{r} library(tidyverse) library(broom) \# devtools::install_github("tidymodels/broom") library(cowplot) library(purrr)

{r} #we have to identify which of the values are constant and creates a logical vector indicating which columns are constant constant_cols\<- human_log2fc_wide \|\> summarise_all(\~ length(unique(.)) == 1) \|\> unlist() \|\> as.logical()

{r} #\| cache: TRUE filtered_data\<- human_log2fc_wide \|\> select(-which(constant_cols))

pca_result\<- filtered_data \|\> select_if(is.numeric) \|\> scale() \|\> prcomp()

{r} pca_result %\>% augment(human_log2fc_wide) %\>% \# add original dataset back in ggplot(aes(.fittedPC1, .fittedPC2, color = Cell_line)) + geom_point(size = 2) + theme_half_open(12) + background_grid()

Rotation matrix

{r} pca_result %\>% tidy(matrix = "rotation")

{r} pca_result %\>% tidy(matrix = "eigenvalues")

{r} pca_resultpca_fit %\>% tidy(matrix = "eigenvalues") %\>% ggplot(aes(PC, percent)) + geom_col(fill = "#56B4E9", alpha = 0.ðŸ˜Ž + scale_x_continuous(breaks = 1:9) + scale_y_continuous( labels = scales::percent_format(), expand = expansion(mult = c(0, 0.01)) ) + theme_minimal_hgrid(12) %\>% tidy(matrix = "eigenvalues") %\>% ggplot(aes(PC, percent)) + geom_col(fill = "#56B4E9", alpha = 0.ðŸ˜Ž + scale_x_continuous(breaks = 1:9) + scale_y_continuous( labels = scales::percent_format(), expand = expansion(mult = c(0, 0.01)) ) + theme_minimal_hgrid(12)
