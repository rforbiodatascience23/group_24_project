---
title: "Describe"
editor: visual
echo : false
warning: false
format: 
  html:
    embed-resources: true
---

## Describe

```{r messsage = FALSE, warning=FALSE}
library(VennDiagram)
library(tidyverse)
library(purrr) 
library(dplyr)
library(ggplot2)
library(tidyr)
library(viridis)
library(ggridges)
library(patchwork)
```

```{r message = FALSE}
Sys.setenv(VROOM_CONNECTION_SIZE = 3062144)

human_aug <- read_tsv(file = "../data/03_dat_aug_human.tsv.gz") 
human_aug_log2fc_wide <- read_tsv(file = "../data/03_dat_aug_human_log2fc_wide.tsv.gz")
human_clean <- read_tsv(file = "../data/02_dat_clean_human.tsv.gz")
mouse_wide <- read_tsv(file = "../data/02_dat_clean_mouse.tsv.gz")
mouse_aug <- read_tsv(file = "../data/03_dat_aug_mouse.tsv.gz")
```

Before delving into the analysis, we would like to understand the data a bit better.

## Mouse Data Investigation

We want to ensure that the data set is balanced, such that each treatment is repeated the same number of times. We do this by counting the occurrences of each treatment and replicate.

```{r}
treatment_counts <- mouse_wide |> 
  count(treatment) 
replicate_counts <- mouse_wide |>
  count(replicate) 

#Render a centered table
knitr::kable(treatment_counts, align = "c")
```

```{r}
knitr::kable(replicate_counts, align = "c")
```

Our next step of the ED analysis is the identification of the gene expression per treatment. That is why we created the freqpoly plots

```{r}
mouse_analysis <- mouse_wide |>
  pivot_longer(cols = -c(treatment, replicate),
               names_to = "gene",
               values_to = "expression_levels")
```

This is the distribution of the expression levels in the original data

```{r}
freq_plot_mouse <- mouse_analysis |>
  ggplot( mapping = aes (x = expression_levels))+
  geom_freqpoly(aes(color = treatment))+ 
  facet_wrap(~treatment)+
  labs(title = "Distribution of Expressions levels in different treatments",
       x = "Expression Levels")

freq_plot_mouse

```

The bulk of zeros suggests that there is no difference in expression between the different conditions. This is a common observation for an RNA Seq data set, since many genes are not activated or remain inactive or unaffected by the studied conditions.

This is the distribution of the expression levels after transforming the data.

```{r}
mouse_analysis_aug <- mouse_aug |>
  pivot_longer(cols = -c(treatment, replicate),
               names_to = "gene",
               values_to = "expression_levels" )

freq_log_plot_mouse <- mouse_analysis_aug |>
  ggplot( mapping = aes (x = expression_levels))+
  geom_freqpoly(aes(color = treatment))+ 
  facet_wrap(~treatment)+
  labs(x = "Expression Levels(log2)")

freq_log_plot_mouse

```

```{r}
p1 <- freq_plot_mouse/freq_log_plot_mouse
ggsave("../results/04_key_plot_1.png",p1, bg = "white", device = "png")
```

Next, we want to check the summary statistics of the gene expression levels.

```{r}
mouse_statistics <- mouse_analysis |> 
  group_by(gene) |> 
  summarise(non_zero_count = sum(expression_levels != 0), 
            zero_count = sum(expression_levels == 0),
            max_value = max(expression_levels),
            median_value = median(expression_levels),
            average_value = mean(expression_levels) 
            )

knitr::kable(mouse_statistics[1:10, ])
```

We can also get a crude look at the average expression levels for every experiment.

```{r}
 mouse_analysis |> 
  group_by(treatment) |> 
  summarise(average_expression_levels = mean(expression_levels,
                                             na.rm = TRUE)) |>
  ggplot(mapping = aes(x = treatment, 
                       y = average_expression_levels)) +
  geom_bar(stat = "identity",
           fill = "light blue")+
  theme_minimal() +
  labs(title = "Average Gene Expression for Each Treatment",
       x = "Treatment", 
       y = "Average Expression Levels")
```

They seem to be roughly the same, with the combined treatment (WNT+G007.LK) being slightly higher than the rest.

Let's now look at the replicates within treatments as well.

```{r}
# Calculate average activity for each treatment and replicate
average_activity_treatment_replicate <- mouse_wide |> 
  pivot_longer(
    cols = -c(treatment, replicate),
    names_to = "gene",
    values_to = "activity") |> 
  group_by(treatment, replicate) |> 
  summarise(average_activity = mean(activity,
                                    na.rm = TRUE),
            .groups = "drop")  # Added .groups = "drop"

# Create a combined treatment and replicate label
average_activity_treatment_replicate <- average_activity_treatment_replicate |> 
  mutate(treatment_replicate = paste(treatment, 
                                     replicate,
                                     sep = " - "))

# Plot average activity for each treatment and replicate as a grouped bar plot with color by treatment
average_plot2 <- ggplot(average_activity_treatment_replicate,
       mapping = aes(x = treatment_replicate,
           y = average_activity,
           fill = treatment)) +
  geom_bar(stat = "identity", 
           position = position_dodge(width = 0.8)) +
  scale_fill_viridis_d()+
  theme_minimal() +
  theme(text = element_text(size = 10),  # Reducing the text size
        axis.text.x = element_text(angle = 45,
                                   hjust = 1)) +  # Rotate x-axis labels for better readability
  labs(title = "Average Gene Activity by Treatment and Replicate",
       x = "Treatment and Replicate",
       y = "Average Activity")
average_plot2

```

These are also very similar. It would be hard to point out the treatment just by looking at the gene activity.

As we saw previously we have a lot of zeroes in our data set. But what is their distribution across the samples? For that matter we create the following histogram.

```{r}
#Calculate zero counts for each gene
zero_counts_genes <- mouse_analysis |>
  group_by(gene) |> 
  summarise(zero_count = sum(expression_levels == 0))

#Create a histogram plot with percentages
mouse_zero_plot <- zero_counts_genes |> 
  ggplot(aes(x = zero_count)) + 
  geom_histogram(mapping = aes(y = after_stat(count/sum(count))), 
                 binwidth = 1, 
                 fill = "light blue") + 
  scale_y_continuous(labels = scales::percent_format()) + 
  theme_minimal() + 
  labs(title = "Investigation of gene expression in each sample ", 
       x = "Presence of zero expression", 
       y = "Percentage of Genes")+
  coord_flip()
mouse_zero_plot
```

We can see that most genes either have all zeroes (\~33%) or all non-zeroes( 40%).

```{r}
p2 <- average_plot2/ mouse_zero_plot
ggsave("../results/04_key_plot_2.png",p2, bg = "white", device = "png")
```

Let's also compare the number of active genes in each treatment.

```{r}
#Determine active genes (non-zero activity) for each treatment

active_genes_per_treatment <- mouse_analysis |>
  filter(expression_levels > 0) |> 
  group_by(treatment) |> 
  summarise(active_genes = n_distinct(gene))

#Plot number of active genes per treatment

active_genes_plot <- active_genes_per_treatment |> 
  ggplot(mapping = aes(x = treatment, 
                       y = active_genes)) + 
  geom_bar(stat = "identity", 
           fill = "orange") + 
  theme_minimal() + 
  labs(title = "Number of Active Genes per Treatment", 
       x = "Treatment", 
       y = "Number of Active Genes")

active_genes_plot
```

## Human Data Investigation

Firstly we check the distribution of expression levels

```{r}
human_analysis <- human_clean |>
  pivot_longer(cols = -c(cell_line,treatment),
               names_to = "gene",
               values_to = "expression_levels" )|>
  relocate(gene, .before = 1)

```

This is the distribution of the Expression Levels in the original data

```{r echo = FALSE}
human_freq_plot1 <- human_analysis |> 
  ggplot(mapping = aes (x = expression_levels))+ 
  geom_freqpoly()+ 
  facet_wrap(~treatment)

human_freq_plot1
  

```

We then check the distribution of expression levels after log2 transformation

```{r echo = FALSE}
human_freq_plot2 <- human_aug |>
  ggplot(mapping = aes(x = log2_expression_levels))+ 
  geom_freqpoly()+ 
  facet_wrap(~treatment)
human_freq_plot2

```

Next we want to check the summary statistics of the gene expression levels

```{r}
human_statistics <- human_analysis |> 
  group_by(gene) |> 
  summarise(non_zero_count = sum(expression_levels != 0), 
            zero_count = sum(expression_levels == 0),
            max_value = max(expression_levels),
            median_value = median(expression_levels),
            average_value = mean(expression_levels) 
            )

knitr::kable(human_statistics[1:10, ])
```

We observe many observations equal to zero, but how many of them are there for each cell line?

We have to check it

```{r}
human_DMSO_zero_table<- human_analysis |> 
  filter(treatment == "DMSO") |> 
  summarise(DMSO_0 = sum(expression_levels == 0))

human_g007_zero_table<- human_analysis |> 
  filter(treatment == "G007LK") |> 
  summarise(G007LK_0 = sum(expression_levels == 0))
```

```{r}
combined_table <- cbind(
  DMSO = human_DMSO_zero_table,
  G007LK = human_g007_zero_table
)
knitr::kable(combined_table)
```

Let's look a bit more into the distribution of zeroes in the human data.

```{r}
zero_counts_genes <- human_analysis |>
  group_by(gene) |> 
  summarise(zero_count = sum(expression_levels == 0))

#Create a histogram plot with percentages

zero_counts_plot <- zero_counts_genes |> 
  ggplot(mapping = aes(x = zero_count)) +
  geom_histogram(mapping = aes(y = after_stat(count/sum(count))), 
                 binwidth = 1, 
                 fill = "light blue") + 
  scale_y_continuous(labels = scales::percent_format()) + 
  theme_minimal() + 
   labs(title = "Investigation of gene expression in each sample ", 
       x = "Presence of zero expression", 
       y = "Percentage of Genes")+
  coord_flip()
zero_counts_plot

```

We can see that over 40% of our data do not contain any 0s but 20% of them are 0 across every sample.

Now let's see what happens to the average gene expressions per Cell line

```{r}
human_analysis |> 
  group_by(treatment, cell_line) |> 
  summarise(average_expression_levels = mean(expression_levels, na.rm = TRUE)) |>

#Plot average activity for each treatment and replicate

ggplot(mapping = aes(x = cell_line, 
                     y = average_expression_levels, 
                     fill = treatment)) + 
  geom_bar(stat = "identity", 
           position = position_dodge(width = 0.8)) + 
  theme_minimal() + 
  labs(title = "Average Gene Activity by Treatment and Cell line", 
       x = "Cell lines", 
       y = "Average Expression levels")+ 
  scale_fill_discrete(name = "treatment")+ 
  theme(axis.text.x = element_text(angle = 45), 
        axis.text = element_text(vjust = 0.5, 
                                 size = 6))

```

Now we want to see the average number of active genes per cell line.

```{r}
active_genes_per_cell <- human_analysis |> 
  filter(expression_levels > 0) |> 
  group_by(cell_line) |> 
  summarise(active_genes = n_distinct(gene))

#Plot number of active genes per treatment

active_genes_plot <- ggplot(data = active_genes_per_cell, 
                            mapping =aes(x = cell_line, 
                                         y = active_genes)) + 
  geom_bar(stat = "identity", 
           fill = "orange") + 
  theme_minimal() + 
  labs(title = "Number of Active Genes per Cell Line", 
       x = "Cell Lines", 
       y = "Number of Active Genes")+ 
  theme(axis.text.x = element_text(angle = 45) )+ 
  scale_y_continuous(breaks = seq(0,27500, by = 2500))

active_genes_plot
```

After we use the boxplot in order to visualize again the distibution of expession levels between the two experimental conditions after the log2 trasnformation per cell lina

```{r}
human_aug |> 
  ggplot(mapping = aes(x = cell_line,
                       y = log2_expression_levels,
                       color = treatment))+
  geom_boxplot()+
   theme(axis.text.x = element_text(angle = 45), 
        axis.text = element_text(vjust = 0.5, 
                                 size = 6))+
   labs(title = "Distribution of gene expression throu cell lines per treatment", 
       x = "Cell line", 
       y = "Expression levels(log2)")+
  facet_wrap(~treatment)
```

We can see now that the distribution is less skewed but we can still see that the majority of the observations are equal to zero (equal to -34.52 after the log2 transformation).

The rest of the produced graphs are a part of the analysis.

So this graph illustrates the 25 most upregulated and downregulated genes (based on their log2foldchange after introducing the G007.LK compound.

```{r}
human_aug_log2fc_long <- human_aug_log2fc_wide |>
  pivot_longer(cols = starts_with("ENSG"),
               names_to = "gene",
               values_to = "log2_fold_change")

down <- human_aug_log2fc_long |>
  arrange(log2_fold_change)|>
  head(25)

up <- human_aug_log2fc_long |>
  arrange(desc(log2_fold_change))|>
  head(25)

up_and_down <- bind_rows(down, up)

#up_and_down we dont want to render it

up_and_down|>
ggplot(aes(x = gene,
           y = cell_line,
           fill = log2_fold_change))+
  geom_tile()+
  scale_fill_gradient2(low = 'blue',
                       high ='red', 
                       midpoint= 0)+
  theme(axis.text.x = element_text(angle = 45, 
                                   vjust = 1, 
                                   hjust=1),
        axis.text=element_text(size=4),
        axis.title=element_text(size=5))+
  theme(legend.position = 'bottom',
        legend.key.size = unit(5, 'mm'),
        legend.title=element_text(size=5),
        legend.text=element_text(size=5))+
  labs(title = "Heat Map of extreme gene expressions", 
       x = "Gene ID", 
       y = "Cell line",
       fill = "log2FC")+
  coord_fixed(ratio=0.6)

ggsave("../results/04_key_plot_3.png", bg = "white", device="png")

```
