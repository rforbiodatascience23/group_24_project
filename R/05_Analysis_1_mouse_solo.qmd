---
title: "Analysis 1 file - Isolated analysis of the mouse dataset"
format: html
editor: visual
---

```{r}
#|label: load the packages
library(tidyverse)
library(stringr)
library(dplyr)
library(tidyr)
library(broom)
library(ggrepel)
source("../R/99_proj_func.R")
```

This analysis will see which genes are significantly up and down regulated in the treatment trials

Here we begin by loading the augmented mouse dataset

```{r}
Sys.setenv(VROOM_CONNECTION_SIZE = 3062144) # Setting a larger connection buffer to be able to load the data
# Loading the data
mouse_df <- read_tsv(file = "../data/04_dat_aug_mouse.tsv.gz")
```

First we loose the "Factor Value\[compound\]" (concentration) column since we don't need it in this analysis

```{r}
mouse_df = mouse_df |> 
  select(-c(`Factor Value[compound]`))

```

Now lets do an analysis to see which genes are significantly up and down regulated in each of the treatment trials.

```{r}
mouse_G007LK_lm <- generate_lm_genes(mouse_df, 'G007LK')
signif_genes_error_bars(mouse_G007LK_lm)

```

```{r}
volcano_plot(mouse_G007LK_lm)
```

```{r}
mouse_WNT_lm <- generate_lm_genes(mouse_df, 'WNT')
signif_genes_error_bars(mouse_WNT_lm)

```

```{r}
volcano_plot(mouse_WNT_lm)
```

```{r}
mouse_WNTG007LK_lm <- generate_lm_genes(mouse_df, 'WNT_G007LK')
signif_genes_error_bars(mouse_WNTG007LK_lm)

```

```{r}
volcano_plot(mouse_WNTG007LK_lm)
```

```{r}
# select a treatment to test for significant up and down regulations
treatm <- 'G007LK'


mouse_lm <- mouse_df |> 
  filter(treatment == 'DMSO' | treatment == treatm) |> 
  mutate(Treated = ifelse(treatment == treatm,1,0))|> 
  pivot_longer(cols = -c(treatment,replicate,Treated), 
               names_to = 'Gene', 
               values_to = 'rel_log2_expr_level') %>% 
  group_by(Gene) |> 
  nest() %>% 
  mutate(model_object = 
           map(.x = data, 
               .f = ~lm(formula = rel_log2_expr_level ~ Treated, 
                        data = .x))) %>% 
  mutate(model_object_tidy = map(model_object, tidy, conf.int = TRUE)) %>% 
  unnest(model_object_tidy) %>% 
  filter(term == 'Treated') |>
  ungroup(Gene) %>% 
  mutate(q.value = p.adjust(p.value, method = "bonferroni"),
                            signif = q.value < 0.05) %>% 
  filter(signif==TRUE)
  
  
```

```{r}
mouse_df_long_nested <- mouse_df_treat_long |>
  group_by(Gene) |> 
  nest()


```

```{r}
mouse_df_long_nested <- mouse_df_long_nested |> 
#  group_by(Gene) |> 
  mutate(model_object = 
           map(.x = data, 
               .f = ~lm(formula = rel_log2_expr_level ~ Treated, 
                        data = .x)))
```

```{r}
mouse_df_long_nested <- 
  mouse_df_long_nested |> 
  mutate(model_object_tidy = 
           map(.x = model_object, 
               .f = ~tidy(x = .x, 
                          conf.int = TRUE,
                          conf.level = 0.95)))
```

```{r}
mouse_estimates <- mouse_df_long_nested|> 
  unnest(model_object_tidy)
```

```{r}
mouse_estimates <- 
  mouse_estimates |>
  filter(term == 'Treated') |>
  ungroup(Gene)
```

```{r}
mouse_estimates <- 
  mouse_estimates |> mutate(q.value = p.adjust(p.value, method = "bonferroni"),
                            signif = q.value < 0.05)
```

```{r}
mouse_estimates_signif <- 
  mouse_estimates |> 
  filter(signif==TRUE)
```

```{r}
mouse_lm |> 
 # filter(estimate > -10 & estimate < 10) |> # We apply this filtering to avoid the genes that only have significant values due to a 0 division in the relative log2 expression transformation.
  arrange(estimate) |> 
  mutate(Gene = factor(Gene, levels = unique(Gene))) |> 
  ggplot(aes(x=estimate,y = Gene)) +
  geom_point() +
  geom_errorbar(aes(xmin = conf.low, 
                    xmax = conf.high),
                width = 0.2) +
  labs(title='Genes Associated with treatment of GK007 in mouse', xlab='Estimate (95% CIs)', ylab='Gene')+
  theme(axis.text.y = element_text(size=6),
        panel.background = element_rect(fill = "white"),
        panel.grid.major = element_line(color = "grey", size = 0.1),
        panel.grid.minor = element_line(color = "lightgrey", size = 0.1),
        plot.title = element_text(size = 11))+
  geom_vline(aes(xintercept=0), linetype="solid", color="black")
```

```{r}
mouse_lm |> 
mutate('neglog10p'= -log10(p.value)) |> 
arrange(estimate) |> 
mutate(Gene = factor(Gene, levels = unique(Gene))) |> 
ggplot(aes(x=estimate,y = neglog10p, color=signif, labels=Gene)) +
geom_point(alpha=0.1) +
labs(title='Genes Associated with treatment of GK007 in mouse', 
     xlab='Estimate (95% CIs)', 
     ylab='-log10(p)') +
scale_color_manual(values = c("FALSE" = "red", "TRUE" = "turquoise")) #+
#geom_text_repel(aes(label=ifelse(signif, as.character(Gene), "")), 
#                size = 2,             
#                label.size = NA,      
#                max.overlaps = Inf,   
#                box.padding = 0.3,    
#                point.padding = 0.4) +
theme(plot.title = element_text(size = 11))
```

```         
```

```{r}
combined_df <- bind_rows(
  mouse_WNT_lm,
  mouse_WNTG007LK_lm,
  mouse_G007LK_lm
)

significant_genes_df <- combined_df %>%
  filter(signif) %>%
  select(Gene, estimate, Treatment)

significant_genes_df %>% 
  ggplot(aes(x = gene,
           y = cell_line,
           fill = log2_fold_change))+
    geom_tile()+
    scale_fill_gradient2(low = 'blue',
                         high ='red', 
                         midpoint= 0)+
    theme(axis.text.x = element_text(angle = 45, 
                                     vjust = 1, 
                                     hjust=1),
          axis.text=element_text(size=4),
          axis.title=element_text(size=5))+
    theme(legend.position = 'bottom',
          legend.key.size = unit(5, 'mm'),
          legend.title=element_text(size=5),
          legend.text=element_text(size=5))+
    coord_fixed(ratio=0.6)
```
